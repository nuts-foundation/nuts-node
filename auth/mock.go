// Code generated by MockGen. DO NOT EDIT.
// Source: auth/interface.go

// Package auth is a generated GoMock package.
package auth

import (
	gomock "github.com/golang/mock/gomock"
	services "github.com/nuts-foundation/nuts-node/auth/services"
	reflect "reflect"
)

// MockAuthenticationServices is a mock of AuthenticationServices interface
type MockAuthenticationServices struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationServicesMockRecorder
}

// MockAuthenticationServicesMockRecorder is the mock recorder for MockAuthenticationServices
type MockAuthenticationServicesMockRecorder struct {
	mock *MockAuthenticationServices
}

// NewMockAuthenticationServices creates a new mock instance
func NewMockAuthenticationServices(ctrl *gomock.Controller) *MockAuthenticationServices {
	mock := &MockAuthenticationServices{ctrl: ctrl}
	mock.recorder = &MockAuthenticationServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthenticationServices) EXPECT() *MockAuthenticationServicesMockRecorder {
	return m.recorder
}

// OAuthClient mocks base method
func (m *MockAuthenticationServices) OAuthClient() services.OAuthClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OAuthClient")
	ret0, _ := ret[0].(services.OAuthClient)
	return ret0
}

// OAuthClient indicates an expected call of OAuthClient
func (mr *MockAuthenticationServicesMockRecorder) OAuthClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OAuthClient", reflect.TypeOf((*MockAuthenticationServices)(nil).OAuthClient))
}

// ContractClient mocks base method
func (m *MockAuthenticationServices) ContractClient() services.ContractClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ContractClient")
	ret0, _ := ret[0].(services.ContractClient)
	return ret0
}

// ContractClient indicates an expected call of ContractClient
func (mr *MockAuthenticationServicesMockRecorder) ContractClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ContractClient", reflect.TypeOf((*MockAuthenticationServices)(nil).ContractClient))
}

// ContractNotary mocks base method
func (m *MockAuthenticationServices) ContractNotary() services.ContractNotary {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ContractNotary")
	ret0, _ := ret[0].(services.ContractNotary)
	return ret0
}

// ContractNotary indicates an expected call of ContractNotary
func (mr *MockAuthenticationServicesMockRecorder) ContractNotary() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ContractNotary", reflect.TypeOf((*MockAuthenticationServices)(nil).ContractNotary))
}
