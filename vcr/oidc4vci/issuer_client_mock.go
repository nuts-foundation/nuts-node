// Code generated by MockGen. DO NOT EDIT.
// Source: vcr/oidc4vci/issuer_client.go

// Package oidc4vci is a generated GoMock package.
package oidc4vci

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	vc "github.com/nuts-foundation/go-did/vc"
)

// MockIssuerAPIClient is a mock of IssuerAPIClient interface.
type MockIssuerAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockIssuerAPIClientMockRecorder
}

// MockIssuerAPIClientMockRecorder is the mock recorder for MockIssuerAPIClient.
type MockIssuerAPIClientMockRecorder struct {
	mock *MockIssuerAPIClient
}

// NewMockIssuerAPIClient creates a new mock instance.
func NewMockIssuerAPIClient(ctrl *gomock.Controller) *MockIssuerAPIClient {
	mock := &MockIssuerAPIClient{ctrl: ctrl}
	mock.recorder = &MockIssuerAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIssuerAPIClient) EXPECT() *MockIssuerAPIClientMockRecorder {
	return m.recorder
}

// Metadata mocks base method.
func (m *MockIssuerAPIClient) Metadata() CredentialIssuerMetadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Metadata")
	ret0, _ := ret[0].(CredentialIssuerMetadata)
	return ret0
}

// Metadata indicates an expected call of Metadata.
func (mr *MockIssuerAPIClientMockRecorder) Metadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Metadata", reflect.TypeOf((*MockIssuerAPIClient)(nil).Metadata))
}

// RequestAccessToken mocks base method.
func (m *MockIssuerAPIClient) RequestAccessToken(grantType string, params map[string]string) (*TokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestAccessToken", grantType, params)
	ret0, _ := ret[0].(*TokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestAccessToken indicates an expected call of RequestAccessToken.
func (mr *MockIssuerAPIClientMockRecorder) RequestAccessToken(grantType, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestAccessToken", reflect.TypeOf((*MockIssuerAPIClient)(nil).RequestAccessToken), grantType, params)
}

// RequestCredential mocks base method.
func (m *MockIssuerAPIClient) RequestCredential(ctx context.Context, request CredentialRequest, accessToken string) (*vc.VerifiableCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestCredential", ctx, request, accessToken)
	ret0, _ := ret[0].(*vc.VerifiableCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestCredential indicates an expected call of RequestCredential.
func (mr *MockIssuerAPIClientMockRecorder) RequestCredential(ctx, request, accessToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestCredential", reflect.TypeOf((*MockIssuerAPIClient)(nil).RequestCredential), ctx, request, accessToken)
}

// MockOAuth2Client is a mock of OAuth2Client interface.
type MockOAuth2Client struct {
	ctrl     *gomock.Controller
	recorder *MockOAuth2ClientMockRecorder
}

// MockOAuth2ClientMockRecorder is the mock recorder for MockOAuth2Client.
type MockOAuth2ClientMockRecorder struct {
	mock *MockOAuth2Client
}

// NewMockOAuth2Client creates a new mock instance.
func NewMockOAuth2Client(ctrl *gomock.Controller) *MockOAuth2Client {
	mock := &MockOAuth2Client{ctrl: ctrl}
	mock.recorder = &MockOAuth2ClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOAuth2Client) EXPECT() *MockOAuth2ClientMockRecorder {
	return m.recorder
}

// RequestAccessToken mocks base method.
func (m *MockOAuth2Client) RequestAccessToken(grantType string, params map[string]string) (*TokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestAccessToken", grantType, params)
	ret0, _ := ret[0].(*TokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestAccessToken indicates an expected call of RequestAccessToken.
func (mr *MockOAuth2ClientMockRecorder) RequestAccessToken(grantType, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestAccessToken", reflect.TypeOf((*MockOAuth2Client)(nil).RequestAccessToken), grantType, params)
}
