// Code generated by MockGen. DO NOT EDIT.
// Source: vcr/holder/oidc4vci_wallet.go

// Package holder is a generated GoMock package.
package holder

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oidc4vci "github.com/nuts-foundation/nuts-node/vcr/oidc4vci"
)

// MockOIDCWallet is a mock of OIDCWallet interface.
type MockOIDCWallet struct {
	ctrl     *gomock.Controller
	recorder *MockOIDCWalletMockRecorder
}

// MockOIDCWalletMockRecorder is the mock recorder for MockOIDCWallet.
type MockOIDCWalletMockRecorder struct {
	mock *MockOIDCWallet
}

// NewMockOIDCWallet creates a new mock instance.
func NewMockOIDCWallet(ctrl *gomock.Controller) *MockOIDCWallet {
	mock := &MockOIDCWallet{ctrl: ctrl}
	mock.recorder = &MockOIDCWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOIDCWallet) EXPECT() *MockOIDCWalletMockRecorder {
	return m.recorder
}

// HandleCredentialOffer mocks base method.
func (m *MockOIDCWallet) HandleCredentialOffer(ctx context.Context, offer oidc4vci.CredentialOffer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleCredentialOffer", ctx, offer)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleCredentialOffer indicates an expected call of HandleCredentialOffer.
func (mr *MockOIDCWalletMockRecorder) HandleCredentialOffer(ctx, offer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCredentialOffer", reflect.TypeOf((*MockOIDCWallet)(nil).HandleCredentialOffer), ctx, offer)
}

// Metadata mocks base method.
func (m *MockOIDCWallet) Metadata() oidc4vci.OAuth2ClientMetadata {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Metadata")
	ret0, _ := ret[0].(oidc4vci.OAuth2ClientMetadata)
	return ret0
}

// Metadata indicates an expected call of Metadata.
func (mr *MockOIDCWalletMockRecorder) Metadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Metadata", reflect.TypeOf((*MockOIDCWallet)(nil).Metadata))
}
