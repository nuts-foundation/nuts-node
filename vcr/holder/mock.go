// Code generated by MockGen. DO NOT EDIT.
// Source: vcr/holder/interface.go

// Package holder is a generated GoMock package.
package holder

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	did "github.com/nuts-foundation/go-did/did"
	vc "github.com/nuts-foundation/go-did/vc"
	proof "github.com/nuts-foundation/nuts-node/vcr/signature/proof"
)

// MockHolder is a mock of Holder interface.
type MockHolder struct {
	ctrl     *gomock.Controller
	recorder *MockHolderMockRecorder
}

// MockHolderMockRecorder is the mock recorder for MockHolder.
type MockHolderMockRecorder struct {
	mock *MockHolder
}

// NewMockHolder creates a new mock instance.
func NewMockHolder(ctrl *gomock.Controller) *MockHolder {
	mock := &MockHolder{ctrl: ctrl}
	mock.recorder = &MockHolderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHolder) EXPECT() *MockHolderMockRecorder {
	return m.recorder
}

// BuildVP mocks base method.
func (m *MockHolder) BuildVP(credentials []vc.VerifiableCredential, proofOptions proof.ProofOptions, signerDID *did.DID, validateVC bool) (*vc.VerifiablePresentation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildVP", credentials, proofOptions, signerDID, validateVC)
	ret0, _ := ret[0].(*vc.VerifiablePresentation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuildVP indicates an expected call of BuildVP.
func (mr *MockHolderMockRecorder) BuildVP(credentials, proofOptions, signerDID, validateVC interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildVP", reflect.TypeOf((*MockHolder)(nil).BuildVP), credentials, proofOptions, signerDID, validateVC)
}
