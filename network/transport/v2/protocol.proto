/*
 * Copyright (C) 2021. Nuts community
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
syntax = "proto3";

option go_package = "github.com/nuts-foundation/nuts-node/network/transport/v2";

package v2;

service Protocol {
  rpc Stream (stream Envelope) returns (stream Envelope) {
  }
}

message Envelope {
  oneof Message {
    Hello hello = 1000;
    TransactionPayloadQuery transactionPayloadQuery = 100;
    TransactionPayload transactionPayload = 101;
  }
}

// TransactionPayloadQuery is a message used to query the payload of a transaction.
message TransactionPayloadQuery {
  // transactionRef contains the reference (hash) of the transaction, which payload the node would like to receive, as specified by RFC004.
  bytes transactionRef = 1;
}

// TransactionPayload is the response message for TransactionPayloadQuery.
message TransactionPayload {
  // transactionRef contains the reference to the transaction which' payload was requested.
  bytes transactionRef = 1;
  // data contains the actual payload.
  bytes data = 10;
}

message Hello {
}