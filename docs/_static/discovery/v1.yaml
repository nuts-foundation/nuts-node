openapi: "3.0.0"
info:
  title: Nuts Discovery Service API spec
  description: API specification for Discovery Services available within Nuts node
  version: 1.0.0
  license:
    name: GPLv3
servers:
  - url: http://localhost:8081
    description: For internal-facing endpoints.
  - url: http://localhost:8080
    description: For public-facing endpoints.
paths:
  /discovery/{serviceID}:
    parameters:
      - name: serviceID
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieves the presentations of a Discovery Service.
      description: |
        An API provided by the discovery server to retrieve the presentations of a Discovery Service, starting at the given tag.
        The client should provide the tag it was returned in the last response.
        If no tag is given, it will return all presentations.

        error returns:
        * 404 - unknown service ID
      operationId: getPresentations
      tags:
        - discovery
      parameters:
        - name: tag
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Presentations are returned, alongside the tag which should be provided at the next query.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresentationsResponse"
        default:
          $ref: "../common/error_response.yaml"
    post:
      summary: Register a presentation on the Discovery Service.
      description: |
        An API provided by the discovery server that adds a presentation to the service.
        The presentation must be signed by subject of the credentials it contains.
        
        To delete a presentation, the client should send an empty presentation that:
        * has a JWT claim 'retracted_jti' indicating the ID of the previous presentation of the same subject
        * has no credentials in it
        * has the type 'RetractedVerifiablePresentation'
        
        error returns:
        * 400 - incorrect input; e.g. unsupported presentation or credential type, invalid signature, unresolvable credential subject, etc.
      operationId: registerPresentation
      tags:
        - discovery
      requestBody:
        description: The presentation to register to the Discovery Service.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifiablePresentation"
      responses:
        "201":
          description: Presentation was registered on the Discovery Service.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
  /internal/discovery/v1:
    get:
      summary: Retrieves the list of Discovery Services.
      description: |
        An API provided by the Discovery Client that retrieves the list of configured Discovery Services.
      operationId: getServices
      tags:
        - discovery
      responses:
        "200":
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceDefinition"
        default:
          $ref: "../common/error_response.yaml"
  /internal/discovery/v1/{serviceID}:
    parameters:
      - name: serviceID
        in: path
        required: true
        schema:
          type: string
      # Way to specify dynamic query parameters
      # See https://stackoverflow.com/questions/49582559/how-to-document-dynamic-query-parameter-names-in-openapi-swagger
      - in: query
        name: query
        required: false
        schema:
          type: object
          additionalProperties:
            type: string
        style: form
        explode: true
    get:
      summary: Searches for presentations registered on the Discovery Service.
      description: |
        An API of the discovery client that searches for presentations on the Discovery Service,
        whose credentials match the given query parameter.
        It queries the client's local copy of the Discovery Service which is periodically synchronized with the Discovery Server.
        This means new registrations might not immediately show up, depending on the client refresh interval. 
        The query parameters are interpreted as JSON path expressions, evaluated on the verifiable credentials.
        The following features and limitations apply:
        - only simple child-selectors are supported (so no arrays selectors, script expressions etc).
        - only JSON string values can be matched, no numbers, booleans, etc.
        - wildcard (*) are supported at the start and end of the value
        - a single wildcard (*) means: match any (non-nil) value
        - matching is case-insensitive
        - expressions must not include the '$.' prefix, which is added by the API.
        - all expressions must match a single credential, for the credential to be included in the result.
        - if there are multiple credentials in the presentation, the presentation is included in the result if any of the credentials match.
        
        Valid examples:
        - `credentialSubject.givenName=John`
        - `credentialSubject.organization.city=Arnhem`
        - `credentialSubject.organization.name=Hospital*`
        - `credentialSubject.organization.name=*clinic`
        - `issuer=did:web:example.com`
      operationId: searchPresentations
      tags:
        - discovery
      responses:
        "200":
          description: Search results are returned, if any.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResult"
        default:
          $ref: "../common/error_response.yaml"
  /internal/discovery/v1/{serviceID}/{did}:
    description: |
      APIs to manage the activation of a DID on a Discovery Service.
      When a service has been activated for a DID, the Discovery Client will automatically register the DID on the Discovery Service.
    parameters:
      - name: serviceID
        in: path
        required: true
        schema:
          type: string
      - name: did
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieves the activation status a DID on a Discovery Service.
      description: |
        An API provided by the Discovery Client,
        used to check whether the client is managing the given DID on the specified Discovery Service (service has been activated for the DID).
        It will return true after successfully calling the activateServiceForDID API, and false after calling the deactivateServiceForDID API.
        It also returns the active Verifiable Presentation, if any.
      operationId: getServiceActivation
      tags:
        - discovery
      responses:
        "200":
          description: Success result.
          content:
            application/json:
              schema:
                type: object
                required:
                  - activated
                properties:
                  activated:
                    type: boolean
                    description: Whether the DID is activated on the Discovery Service.
                  vp:
                    $ref: "#/components/schemas/VerifiablePresentation"
        default:
          $ref: "../common/error_response.yaml"
    post:
      summary: Client API to activate a DID on the specified Discovery Service.
      description: |
        An API provided by the discovery client that will cause the given DID to be registered on the specified Discovery Service.
        Registration of a Verifiable Presentation will be attempted immediately, and it will be automatically refreshed.
        Application only need to call this API once for every service/DID combination, until the registration is explicitly deleted through this API.
        
        For successful registration on the Discovery Server, the DID's credential wallet must contain the credentials specified by the Discovery Service definition.
        If initial registration fails this API returns the error indicating what failed, but will retry at a later moment.
        Applications can force a retry by calling this API again.
        
        error returns:
        * 400 - incorrect input: invalid/unknown service or DID.
      operationId: activateServiceForDID
      tags:
        - discovery
      responses:
        "200":
          description: Activation was successful.
        "202":
          description: Activation was successful, but registration of the Verifiable Presentation failed (but will be automatically re-attempted later).
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: Description of why registration failed.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
    delete:
      summary: Client API to deactivate the given DID from the Discovery Service.
      description: |
        An API provided by the discovery client that will cause the given DID to be not to be registered any more on the specified Discovery Service.
        It will try to delete the existing registration at the Discovery Service, if any.
        
        error returns:
        * 400 - incorrect input: invalid/unknown service or DID.
      operationId: deactivateServiceForDID
      tags:
        - discovery
      responses:
        "200":
          description: |
            DID was successfully deactivated from the Discovery Service.
            The active Verifiable Presentation was removed from the remote Discovery Server (if applicable).
        "202":
          description: |
            DID was successfully deactivated from the Discovery Service, but failed to remove the active Verifiable Presentation registration from the remote Discovery Server. The registration will be removed by the Discovery Server when the active Verifiable Presentation expires.
            Applications might want to retry this API call later, or simply let the presentation expire.
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: Description of why removal of the registration failed.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
components:
  schemas:
    VerifiablePresentation:
      $ref: "../common/ssi_types.yaml#/components/schemas/VerifiablePresentation"
    PresentationsResponse:
      type: object
      required:
        - tag
        - entries
      properties:
        tag:
          type: string
        entries:
          type: array
          items:
            $ref: "#/components/schemas/VerifiablePresentation"
    SearchResult:
      type: object
      required:
        - id
        - subject_id
        - vp
        - fields
      properties:
        id:
          type: string
          description: The ID of the Verifiable Presentation.
        subject_id:
          type: string
          description: The ID of the Verifiable Credential subject (holder), typically a DID.
        vp:
          $ref: "#/components/schemas/VerifiablePresentation"
        fields:
          type: object
          description: Input descriptor IDs and their mapped values that from the Verifiable Credential.
    ServiceDefinition:
      type: object
      required:
          - id
          - endpoint
          - presentation_definition
          - presentation_max_validity
      properties:
        id:
          type: string
          description: The ID of the Discovery Service.
        endpoint:
          type: string
          description: The endpoint of the Discovery Service.
        presentation_definition:
          type: object
          description: The Presentation Definition of the Discovery Service.
        presentation_max_validity:
          type: integer
          description: The maximum validity (in seconds) of a Verifiable Presentation of the Discovery Service.
  securitySchemes:
    jwtBearerAuth:
      type: http
      scheme: bearer

security:
  - { }
  - jwtBearerAuth: [ ]
