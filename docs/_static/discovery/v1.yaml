openapi: "3.0.0"
info:
  title: Nuts Discovery Service API spec
  description: API specification for discovery services available within Nuts node
  version: 1.0.0
  license:
    name: GPLv3
servers:
  - url: http://localhost:1323
paths:
  /discovery/{serviceID}:
    parameters:
      - name: serviceID
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Retrieves the presentations of a discovery service.
      description: |
        An API provided by the discovery server to retrieve the presentations of a discovery service, starting at the given tag.
        The client should provide the tag it was returned in the last response.
        If no tag is given, it will return all presentations.

        error returns:
        * 404 - unknown service ID
      operationId: getPresentations
      tags:
        - discovery
      parameters:
        - name: tag
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Presentations are returned, alongside the tag which should be provided at the next query.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PresentationsResponse"
        default:
          $ref: "../common/error_response.yaml"
    post:
      summary: Register a presentation on the discovery service.
      description: |
        An API provided by the discovery server that adds a presentation to the service.
        The presentation must be signed by subject of the credentials it contains.
        
        To delete a presentation, the client should send an empty presentation that:
        * has a JWT claim 'retracted_jti' indicating the ID of the previous presentation of the same subject
        * has no credentials in it
        * has the type 'RetractedVerifiablePresentation'
        
        error returns:
        * 400 - incorrect input; e.g. unsupported presentation or credential type, invalid signature, unresolvable credential subject, etc.
      operationId: registerPresentation
      tags:
        - discovery
      requestBody:
        description: The presentation to register to the discovery service.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifiablePresentation"
      responses:
        "201":
          description: Presentation was registered on the discovery service.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
  /internal/discovery/v1/{serviceID}/{did}:
    parameters:
      - name: serviceID
        in: path
        required: true
        schema:
          type: string
      - name: did
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Client API to start registering the given DID on the discovery service.
      description: |
        An API provided by the discovery client that will cause the given DID to be registered on the specified discovery service.
        Registration will be attempted immediately, and it will be automatically refreshed.
        Application only need to call this API once for every service/DID combination, until the registration is explicitly deleted through this API.
      
        For successful registration on the discovery service, the DID's credential wallet must contain the credentials specified by the discovery service definition.
        If initial registration fails this API returns the error indicating what failed, but will retry at a later moment.
        Applications can force a retry by calling this API again.
      
        error returns:
        * 400 - incorrect input: invalid/unknown service or DID.
      operationId: startRegisteringPresentation
      tags:
        - discovery
      responses:
        "200":
          description: Registration at discovery service was successful.
        "202":
          description: Registration at discovery service failed, but will be re-attempted later.
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: Description of why registration failed.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
    delete:
      summary: Client API to stop registering the given DID on the discovery service.
      description: |
        An API provided by the discovery client that will cause the given DID to be not to be registered any more on the specified discovery service.
        It will try to delete the existing registration at the discovery service, if any.
      
        error returns:
        * 400 - incorrect input: invalid/unknown service or DID.
      operationId: stopRegisteringPresentation
      tags:
        - discovery
      responses:
        "200":
          description: |
            Registration at discovery service was successfully stopped, and registration at discovery service was deleted
            (if applicable).
        "202":
          description: |
            Registration at discovery service was successfully stopped, but failed to delete registration at discovery service.
            Applications might want to retry this API call later, or simply let the presentation expire.
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: Description of why registration deletion failed.
        "400":
          $ref: "../common/error_response.yaml"
        default:
          $ref: "../common/error_response.yaml"
components:
  schemas:
    VerifiablePresentation:
      $ref: "../common/ssi_types.yaml#/components/schemas/VerifiablePresentation"
    PresentationsResponse:
      type: object
      required:
        - tag
        - entries
      properties:
        tag:
          type: string
        entries:
          type: array
          items:
            $ref: "#/components/schemas/VerifiablePresentation"
  securitySchemes:
    jwtBearerAuth:
      type: http
      scheme: bearer

security:
  - { }
  - jwtBearerAuth: [ ]
