openapi: "3.0.0"
info:
  title: Nuts Verifiable Credential API spec
  description: API specification for Verifiable Credentials
  version: 1.0.0
  license:
    name: GPLv3
paths:
  /internal/vcr/v1/vc:
    post:
      summary: Creates a new Verifiable Credential
      operationId: "create"
      tags:
        - credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueVCRequest'
      responses:
        "200":
          description: "New VC has been created successfully. Returns the Verifiable Credential."
          content:
            application/vc+json:
              schema:
                $ref: '#/components/schemas/VerifiableCredential'
        "400":
          description: One or more of the given parameters are invalid
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
  /internal/vcr/v1/vc/{id}:
    parameters:
      - name: id
        in: path
        description: URL encoded ID.
        required: true
        example:
          - "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY#90382475609238467"
        schema:
          type: string
    get:
      summary: "Resolves a verifiable credential"
      description: >
        The resolutionResult contains the credential regardless of the validity.
        The resolutionResult.currentStatus must be checked to see if the credential is valid.
      operationId: "resolve"
      tags:
        - credential
      responses:
        "200":
          description: Credential has been found and is returned.
          content:
            application/vc+json:
              schema:
                $ref: '#/components/schemas/ResolutionResult'
        "404":
          description: Corresponding credential could not be found.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: "Revoke a credential"
      operationId: "revoke"
      tags:
        - credential
      responses:
        "200":
          description: Revocation has been processed locally. It has also been published to the network.
          content:
            application/vc+json;type=revocation:
              schema:
                $ref: '#/components/schemas/Revocation'
        "400":
          description: Credential can't be revoked. Most likely due to a missing private key.
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: Credential is not found.
          content:
            text/plain:
              schema:
                type: string
        "409":
          description: Credential has already been revoked.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
  /internal/vcr/v1/{concept}:
    post:
      summary: Search for a concept. A concept is backed by 1 or more VCs
      operationId: "search"
      tags:
        - credential
      requestBody:
        required: true
        description: a query with key value pairs and pagination
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
      parameters:
        - name: concept
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Found 0 or more results.
          content:
            application/json:
              example:
              schema:
                type: array
                items:
                  description: the returned JSON depends on the requested concept.
                  type: object
        "400":
          description: invalid params.
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: concept not found.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
  /internal/vcr/v1/trust:
    post:
      summary: Mark all the VCs of given type and issuer as 'trusted'.
      description: The added trust is persisted and may be removed with a delete operation.
      operationId: "trustIssuer"
      tags:
        - credential
      requestBody:
        required: true
        description: a issuer/credentialType combination
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialIssuer"
      responses:
        "204":
          description: The change was accepted.
        "400":
          description: invalid params.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Remove trust in an issuer/credentialType combination
      description: The removed trust is persisted.
      operationId: "untrustIssuer"
      tags:
        - credential
      requestBody:
        required: true
        description: a issuer/credentialType combination
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialIssuer"
      responses:
        "204":
          description: The change was accepted.
        "400":
          description: invalid params.
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: An error occurred while processing the request.
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    CredentialSubject:
      type: object
      description: Subject of a Verifiable Credential identifying the holder and expressing claims.
    CredentialIssuer:
      type: object
      required:
        - issuer
        - credentialType
      properties:
        issuer:
          description: the DID of an issuer
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
          type: string
        credentialType:
          description: a credential type
          example: NutsOrganizationCredential
          type: string
    KeyValuePair:
      type: object
      description: used search params
      required:
        - key
        - value
      properties:
        key:
          description: >
            Fields from VCs to search on. Concept specific keys must be prepended with the concept name and a '.'.
            Default fields like: issuer, subject, type do not require a prefix since they are a mandatory part of each VC.
          type: string
          example: company.name
        value:
          type: string
    ResolutionResult:
      type: object
      description: result of a Resolve operation.
      required:
        - currentStatus
        - verifiableCredential
      properties:
        currentStatus:
          type: string
          enum: ["trusted", "revoked", "untrusted"]
          description: Only credentials with with "trusted" state are valid. If a revoked credential is also untrusted, revoked will be returned.
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
    Revocation:
      type: object
      description: Credential revocation record
      required:
        - issuer
        - subject
        - date
      properties:
        issuer:
          type: string
          description: issuer refers to the party that issued the credential
        subject:
          type: string
          description: subject refers to the credential identifier that is revoked
        reason:
          type: string
          description: reason describes why the VC has been revoked
        date:
          type: string
          description: date is a rfc3339 formatted datetime.
        proof:
          type: object
          description: Proof contains the cryptographic proof(s).
    SearchRequest:
      type: object
      description: >
        Input for a search call. Parameters are entered as key/value pairs.
        Concept specific query params need to be prepended with the concept name.
      required:
        - params
      properties:
        params:
          description: key/value pairs
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        offset:
          description: skips first x results, default 0
          type: number
        limit:
          description: limit number of return values to x, default 10
          type: number
    VerifiableCredential:
      type: object
      description: A credential according to the W3C and Nuts specs.
      required:
        - "@context"
        - type
        - issuer
        - issuanceDate
        - credentialSubject
        - proof
      properties:
        "@context":
          description: List of URIs
          type: array
          items:
            type: string
        id:
          description: credential ID. A Nuts DID followed by a large number.
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
          type: string
        type:
          description: List of type definitions for the credential. Always includes 'VerifiableCredential'
          type: array
          items:
            type: string
        issuer:
          description: DID according to Nuts specification
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
          type: string
        issuanceDate:
          description: rfc3339 time string when the credential was issued.
          type: string
          example: "2012-01-02T12:00:00Z"
        expirationDate:
          description: rfc3339 time string untill when the credential is valid.
          type: string
          example: "2012-01-02T12:00:00Z"
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
        proof:
          description: one or multiple cryptographic proofs
          type: object
    IssueVCRequest:
      type: object
      description: A request for issuing a new Verifiable Credential.
      required:
        - type
        - issuer
        - credentialSubject
      properties:
        type:
          description: Type definition for the credential.
          type: string
          example: "NutsOrganizationCredential"
        issuer:
          description: DID according to Nuts specification.
          type: string
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
        expirationDate:
          description: rfc3339 time string until when the credential is valid.
          type: string
          example: "2012-01-02T12:00:00Z"
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'