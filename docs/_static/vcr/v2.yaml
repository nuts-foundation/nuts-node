openapi: "3.0.0"
info:
  title: Nuts Verifiable Credential API spec
  description: API specification for Verifiable Credentials
  version: 1.0.0
  license:
    name: GPLv3
servers:
  - url: http://localhost:1323
paths:
  /internal/vcr/v2/issuer/vc:
    post:
      summary: Creates a new Verifiable Credential
      description: |
        Creates a new Verifiable Credential.
        
        error returns:
        * 400 - One or more of the given parameters are invalid
        * 500 - An error occurred while processing the request
      operationId: "issueVC"
      tags:
        - credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueVCRequest'
      responses:
        "200":
          description: "New VC has been created successfully. Returns the Verifiable Credential."
          content:
            application/vc+json:
              schema:
                $ref: '#/components/schemas/VerifiableCredential'
        default:
          $ref: '../common/error_response.yaml'

  /internal/vcr/v2/issuer/vc/{id}:
    parameters:
      - name: id
        in: path
        description: URL encoded ID.
        required: true
        example:
          - "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY#90382475609238467"
        schema:
          type: string
    get:
      summary: "Resolves an issued verifiable credential"
      description: >
        The resolutionResult contains the credential regardless of the validity.
        The resolutionResult.currentStatus must be checked to see if the credential is valid.

        error returns:
        * 404 - Corresponding credential could not be found
        * 500 - An error occurred while processing the request
      operationId: "resolveIssuedVC"
      parameters:
        - name: resolveTime
          in: query
          description: a rfc3339 time string for resolving a VC at a specific moment in time
          example: "2012-01-02T12:00:00Z"
          schema:
            type: string
      tags:
        - credential
      responses:
        "200":
          description: Credential has been found and is returned.
          content:
            application/vc+json:
              schema:
                $ref: '#/components/schemas/ResolutionResult'
        default:
          $ref: '../common/error_response.yaml'
    delete:
      summary: "Revoke an issued credential"
      description: |
        Revoke a credential.

        error returns:
        * 400 - Credential can't be revoked. Most likely due to a missing private key.
        * 404 - Credential is not found
        * 409 - Credential has already been revoked
        * 500 - An error occurred while processing the request
      operationId: "revokeVC"
      tags:
        - credential
      responses:
        "200":
          description: Revocation has been processed locally. It has also been published to the network.
          content:
            application/vc+json;type=revocation:
              schema:
                $ref: '#/components/schemas/Revocation'
        default:
          $ref: '../common/error_response.yaml'
  /internal/vcr/v2/verifier/vc:
    post:
      summary: Verifies a Verifiable Credential
      description: |
        Verifies a Verifiable Credential: It checks the signature, expiration, revocation status and if the issuer is trusted.
        
        error returns:
        * 400 - One or more of the given parameters are invalid
        * 500 - An error occurred while processing the request
      operationId: "verifyVC"
      tags:
        - credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifiableCredential'
      responses:
        "200":
          description: "The verification result"
          content:
            application/vc+json:
              schema:
                $ref: '#/components/schemas/VCVerificationResult'
        default:
          $ref: '../common/error_response.yaml'


components:
  schemas:
    IssueVCRequest:
      type: object
      description: A request for issuing a new Verifiable Credential.
      required:
        - type
        - issuer
        - credentialSubject
      properties:
        type:
          description: Type definition for the credential.
          type: string
          example: "NutsOrganizationCredential"
        issuer:
          description: DID according to Nuts specification.
          type: string
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
        expirationDate:
          description: rfc3339 time string until when the credential is valid.
          type: string
          example: "2012-01-02T12:00:00Z"
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
    VerifiableCredential:
      type: object
      description: A credential according to the W3C and Nuts specs.
      required:
        - "@context"
        - type
        - issuer
        - issuanceDate
        - credentialSubject
        - proof
      properties:
        "@context":
          description: List of URIs
          type: array
          items:
            type: string
        id:
          description: credential ID. A Nuts DID followed by a large number.
          example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
          type: string
        type:
          description: List of type definitions for the credential. Always includes 'VerifiableCredential'
          type: array
          items:
            type: string
        issuer:
          $ref: '#/components/schemas/DID'
        issuanceDate:
          description: rfc3339 time string when the credential was issued.
          type: string
          example: "2012-01-02T12:00:00Z"
        expirationDate:
          description: rfc3339 time string untill when the credential is valid.
          type: string
          example: "2012-01-02T12:00:00Z"
        credentialSubject:
          $ref: '#/components/schemas/CredentialSubject'
        proof:
          description: one or multiple cryptographic proofs
          type: object
    ResolutionResult:
      type: object
      description: result of a Resolve operation.
      required:
        - currentStatus
        - verifiableCredential
      properties:
        currentStatus:
          type: string
          enum: ["trusted", "revoked", "untrusted"]
          description: Only credentials with with "trusted" state are valid. If a revoked credential is also untrusted, revoked will be returned.
        verifiableCredential:
          $ref: "#/components/schemas/VerifiableCredential"
    Revocation:
      type: object
      description: Credential revocation record
      required:
        - issuer
        - subject
        - date
      properties:
        issuer:
          $ref: '#/components/schemas/DID'
        subject:
          type: string
          description: subject refers to the credential identifier that is revoked
        reason:
          type: string
          description: reason describes why the VC has been revoked
        date:
          type: string
          description: date is a rfc3339 formatted datetime.
        proof:
          type: object
          description: Proof contains the cryptographic proof(s).
    DID:
      type: string
      description: DID according to Nuts specification
      example: "did:nuts:B8PUHs2AUHbFF1xLLK4eZjgErEcMXHxs68FteY7NDtCY"
    CredentialSubject:
      type: object
      description: Subject of a Verifiable Credential identifying the holder and expressing claims.
    VCVerificationResult:
      description: Contains the verifiable credential verification result.
      type: object
      required:
        - validity
      properties:
        validity:
          type: boolean
          description: Indicates the validity of the signature, issuer and revokation state.
        message:
          type: string
          description: Indicates what went wrong
