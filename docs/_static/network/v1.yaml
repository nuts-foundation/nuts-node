openapi: "3.0.0"
info:
  title: Nuts network API spec
  description: API specification for RPC services available at the nuts-network
  version: 0.1.0
  license:
    name: GPLv3
paths:
  /internal/network/v1/transaction:
    get:
      summary: "Lists the transactions on the DAG"
      description: >
        Lists all transactions on the DAG. Since this call returns all transactions on the DAG, care should be taken when there
        are many of them.
        TODO: By then we'd need a more elaborate querying interface (ranging over timestamps/hashes, pagination, filtering, etc).
      operationId: "listTransactions"
      tags:
        - transactions
      responses:
        "200":
          description: "Successfully listed the transactions"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /internal/network/v1/transaction/{ref}:
    parameters:
      - name: ref
        in: path
        description: "Reference of the transaction"
        required: true
        example: "4960afbdf21280ef248081e6e52317735bbb929a204351291b773c252afeebf4"
        schema:
          type: string
    get:
      summary: "Retrieves a transaction"
      operationId: "getTransaction"
      tags:
        - transactions
      responses:
        "200":
          description: "Transaction is known in the transaction log"
          content:
            application/jose:
              schema:
                type: string
        "404":
          description: "Transaction wasn't found in the transaction log"
  /internal/network/v1/transaction/{ref}/payload:
    parameters:
      - name: ref
        in: path
        description: "Reference of the transaction"
        required: true
        example: "4960afbdf21280ef248081e6e52317735bbb929a204351291b773c252afeebf4"
        schema:
          type: string
    get:
      summary: "Gets the transaction payload"
      operationId: "getTransactionPayload"
      tags:
        - transactions
      responses:
        "200":
          description: "Transaction found (with payload) and returned."
          content:
            application/octet-stream:
              example:
        "404":
          description: "Transaction (or payload) wasn't found"
  /internal/network/v1/diagnostics/graph:
    get:
      summary: "Visualizes the DAG as a graph"
      description: >
        Walks the DAG as subscribers of the DAG do, rendering it as graph. By default it renders in Graphviz format,
        which can be rendered to an image using `dot`.
      operationId: "renderGraph"
      tags:
        - transactions
      responses:
        "200":
          description: "Graph successfully rendered"
          content:
            text/vnd.graphviz:
              schema:
                type: string