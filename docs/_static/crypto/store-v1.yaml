openapi: "3.0.0"
info:
  title: Nuts Crypto Storage Abstraction API
  description: |
    API specification for a generic secret store HTTP server. 
    It can be use to implement a secure store or a proxy to a storage solution such as 
    Hashicorp Vault or Azure key store. Usually the Nuts node will be the client.
    
    The endpoints mounted at /secret/{path} is a key-value store which accepts keys as path.
  version: 1.0.0
  license:
    name: GPLv3
servers:
  - url: http://localhost:7863
paths:
  /secrets/{path}:
    parameters:
      - name: path
        in: path
        description: Path to a secret which acts as the key for a key-value store. Special characters must be url encoded.
        required: true
        example: private-keys/identities/123
        schema:
          type: string
    get:
      summary: Lookup the secret for the provided path
      operationId: LookupSecret
      responses:
        "200":
          description: |
            The response on a successful lookup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
        "404":
          description: The lookup failed, the secret for the provided path could not be found.
        "400":
          description: The request was invalid. Check the error response for more details.
          content:
            application/problem+json:  # https://tools.ietf.org/html/rfc7807#section-6.1
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Store a new value in the key store
      operationId: StoreSecret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreSecretRequest'
      responses:
        "200":
          description: |
            The secret was successfully stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'

        "400":
          description: The request was invalid. Check the error response for more details.
          content:
            application/problem+json:  # https://tools.ietf.org/html/rfc7807#section-6.1
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: The store operation failed. A secret for this path already exists.
    delete:
      operationId: DeleteSecret
      summary: Delete a value from the key store
      responses:
        204:
          description: The deletion succeeded, the secret for the provided path has been deleted from the key store.
        "404":
          description: The deletion failed, the secret for the provided path could not be found.
        "400":
          description: The request was invalid. Check the error response for more details.
          content:
            application/problem+json:  # https://tools.ietf.org/html/rfc7807#section-6.1
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Secret:
      type: string
      description: "The secret value stored under the provided path. The secret should be a asci string or be base64 encoded."
      example: "secret-value"
    StoreSecretRequest:
      description: Request body to store a secret value.
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/Secret"
    SecretResponse:
      description: Response object containing the secret value.
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/Secret"
    ErrorResponse:
      description: |
        The ErrorResponse contains the Problem Details for HTTP APIs as specified in [RFC7807](https://tools.ietf.org/html/rfc7807).
        
        It provides more detais about probles occured in the storage server.
        
        Return values contain the following members:
        - **title** (string) - A short, human-readable summary of the problem type.
        - **status** (number) - The HTTP status code generated by the origin server for this occurrence of the problem.
        - **backend** (string) The name of the storage backend. This can provide context to the error.
        - **detail** (string) - A human-readable explanation specific to this occurrence of the problem.
      required:
        - title
        - status
        - backend
        - detail
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: "Lookup failed. The backend returned an error."
        status:
          type: integer
          description: HTTP statuscode
          example: 403
        backend:
          type: string
          description: The name of the storage backend. This can provide context to the error.
          example: "hashicorp-vault"
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: "permission denied"
