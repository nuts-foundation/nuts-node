.. _nuts_vdr:

nuts vdr
--------

Verifiable Data VDR commands

Synopsis
~~~~~~~~


Verifiable Data VDR commands

Options
~~~~~~~

::

      --address string     Address of the remote node. Must contain at least host and port, URL scheme may be omitted. In that case it 'http://' is prepended. (default "localhost:1323")
  -h, --help               help for vdr
      --timeout duration   Client time-out when performing remote operations, such as '500ms' or '10s'. Refer to Golang's 'time.Duration' syntax for a more elaborate description of the syntax. (default 10s)
      --verbosity string   Log level (trace, debug, info, warn, error) (default "info")

SEE ALSO
~~~~~~~~

* :ref:`nuts <nuts>` 	 - Nuts executable which can be used to run the Nuts server or administer the remote Nuts server.
* :ref:`nuts vdr add-keyagreement <nuts_vdr_add-keyagreement>` 	 - Add a key agreement key to the DID document.
* :ref:`nuts vdr addvm <nuts_vdr_addvm>` 	 - Add a verification method key to the DID document.
* :ref:`nuts vdr conflicted <nuts_vdr_conflicted>` 	 - Print conflicted documents and their metadata
* :ref:`nuts vdr create-did <nuts_vdr_create-did>` 	 - Registers a new DID
* :ref:`nuts vdr deactivate <nuts_vdr_deactivate>` 	 - Deactivate a DID document based on its DID
* :ref:`nuts vdr delvm <nuts_vdr_delvm>` 	 - Deletes a verification method from the DID document.
* :ref:`nuts vdr resolve <nuts_vdr_resolve>` 	 - Resolve a DID document based on its DID
* :ref:`nuts vdr update <nuts_vdr_update>` 	 - Update a DID with the given DID document, this replaces the DID document. If no file is given, a pipe is assumed. The hash is needed to prevent concurrent updates.

*Auto generated by spf13/cobra on 6-Jul-2022*
