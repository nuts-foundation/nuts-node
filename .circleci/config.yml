version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
commands:
  install-protoc:
    parameters:
      protoc_release:
        default: "v3.14.0"
        type: string
    steps:
      - run:
          name: Installing protoc
          command: |
            if [ -n "<<parameters.protoc_release>>" ]; then
              protoc_release="<<parameters.protoc_release>>"
            fi

            protoc_release=${protoc_release:-$(curl -s https://api.github.com/repos/protocolbuffers/protobuf/releases/latest | jq -r '.tag_name')}
            protoc_version=${protoc_release#v}

            echo -e '\033[1;32m' "Installing protoc ${protoc_release} ..." '\033[0m'

            os=linux
            arch=x86_64
            archive=./protoc.zip
            path=protoc

            curl -fsSL "https://github.com/protocolbuffers/protobuf/releases/download/${protoc_release}/protoc-${protoc_version}-${os}-${arch}.zip" -o ${archive}

            unzip -d ${path} ${archive}

            sudo mv "${path}/bin/protoc" /usr/local/bin/protoc

            sudo mv "${path}/include/google" /usr/local/include/

            sudo chmod +x /usr/local/bin/protoc

            rm -rf ${archive} ${path}

            echo -e '\033[1;32m' "protoc ${protoc_release} installed successfully!" '\033[0m'

jobs:
  build:
    docker:
      - image: circleci/golang:1.15

    environment:
      GO111MODULE: "on"

    steps:
      - checkout

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

      - install-protoc
      - run: make install-tools
      - run: make run-generators
      - run: go get -t -v ./...

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run: go test ./... -race
      - run: go test ./... -coverprofile=coverage.txt

      - codecov/upload:
          file: coverage.txt
