// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/network/ambassador.go

// Package network is a generated GoMock package.
package network

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAmbassador is a mock of Ambassador interface
type MockAmbassador struct {
	ctrl     *gomock.Controller
	recorder *MockAmbassadorMockRecorder
}

// MockAmbassadorMockRecorder is the mock recorder for MockAmbassador
type MockAmbassadorMockRecorder struct {
	mock *MockAmbassador
}

// NewMockAmbassador creates a new mock instance
func NewMockAmbassador(ctrl *gomock.Controller) *MockAmbassador {
	mock := &MockAmbassador{ctrl: ctrl}
	mock.recorder = &MockAmbassadorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAmbassador) EXPECT() *MockAmbassadorMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockAmbassador) Start() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start")
}

// Start indicates an expected call of Start
func (mr *MockAmbassadorMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockAmbassador)(nil).Start))
}
