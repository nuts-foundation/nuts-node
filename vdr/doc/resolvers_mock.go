// Code generated by MockGen. DO NOT EDIT.
// Source: vdr/doc/resolvers.go

// Package doc is a generated GoMock package.
package doc

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ssi "github.com/nuts-foundation/go-did"
	did "github.com/nuts-foundation/go-did/did"
)

// MockServiceResolver is a mock of ServiceResolver interface.
type MockServiceResolver struct {
	ctrl     *gomock.Controller
	recorder *MockServiceResolverMockRecorder
}

// MockServiceResolverMockRecorder is the mock recorder for MockServiceResolver.
type MockServiceResolverMockRecorder struct {
	mock *MockServiceResolver
}

// NewMockServiceResolver creates a new mock instance.
func NewMockServiceResolver(ctrl *gomock.Controller) *MockServiceResolver {
	mock := &MockServiceResolver{ctrl: ctrl}
	mock.recorder = &MockServiceResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceResolver) EXPECT() *MockServiceResolverMockRecorder {
	return m.recorder
}

// Resolve mocks base method.
func (m *MockServiceResolver) Resolve(query ssi.URI, maxDepth int) (did.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resolve", query, maxDepth)
	ret0, _ := ret[0].(did.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve.
func (mr *MockServiceResolverMockRecorder) Resolve(query, maxDepth interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockServiceResolver)(nil).Resolve), query, maxDepth)
}

// ResolveEx mocks base method.
func (m *MockServiceResolver) ResolveEx(endpoint ssi.URI, depth, maxDepth int, documentCache map[string]*did.Document) (did.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveEx", endpoint, depth, maxDepth, documentCache)
	ret0, _ := ret[0].(did.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveEx indicates an expected call of ResolveEx.
func (mr *MockServiceResolverMockRecorder) ResolveEx(endpoint, depth, maxDepth, documentCache interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveEx", reflect.TypeOf((*MockServiceResolver)(nil).ResolveEx), endpoint, depth, maxDepth, documentCache)
}
